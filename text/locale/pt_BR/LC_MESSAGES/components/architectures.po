# 
msgid ""
msgstr ""
"Project-Id-Version: Modelica by Example v0.3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-29 16:40-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Cicero Juliao <juliaojunior@gmail.com>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/components/architectures.rst:4
msgid "Architectures"
msgstr ""

#: ../../source/components/architectures.rst:6
msgid ""
"At the start of this book, we looked at how to write equations and transform"
" those into simulations.  That, by itself, is very interesting because we "
"were able to avoid having to worry about how we would solve the resulting "
"linear and non-linear systems of equations or how to integrate the resulting"
" differential equations.  However, writing complex systems in terms of "
"individual equations does not scale well."
msgstr ""
"No começo deste livro, vemos como escrever equações e transformar "
"tais equações em simulações. Isso, por si só, é muito interessante porque nós "
"seremos capazes de evitar a preocupação em como resolver os sistemas "
"lineares e não lineares de equações ou como integrar as resultantes "
"equações diferenciais. No entanto, escrever sistemas complexos em termos de"
"equações individuais é algo tão bom."

#: ../../source/components/architectures.rst:14
msgid ""
"So, we then explored the features of Modelica that allow us to create "
"component models so that we could reuse these equations without having to "
"take the time to write them out in every context where they would be used.  "
"Not only did this allow us to compose systems from pre-defined (and "
"presumably tested) component models, it also allowed us, through the use of "
"Modelica's standard graphical annotations, to compose and represent systems "
"graphically."
msgstr ""
"Assim, nós veremos as características de Modelica que nos permitem criar "
"modelos de componentes, para poder reutilizar essas equações sem ter que "
"gastar tempo para escrevê-los em todos os contextos onde seriam utilizados. "
"Isso não só nos permite compor sistemas utilizando modelos de componentes pré-definidos "
"( e presumivelmente testados), mas também permite, através da utilização de "
"padrões gráficos da Modelica, compor e representar sistemas "
"graficamente. "

#: ../../source/components/architectures.rst:22
msgid ""
"This too has scalability issues because building complex models strictly "
"from components requires a great deal of dragging, dropping and connecting "
"of components.  Furthermore, system models can become large and complex "
"without any kind of hierarchy.  This is yet another limitation to "
"scalability.  To address this issue, we examined how to define reusable "
"subsystem models that, instead of containing equations to be reused, "
"contained reusable assemblies of components and other subsystems.  In this "
"way, we could drag, drop and connect common assemblies of components into "
"reusable assemblies.  This minimized the amount of dragging, dropping and "
"connecting that was required to build complex system models."
msgstr ""
"Isso também trata de problemas de escalabilidade, pois a construção de modelos complexos estritamente "
"a partir de componentes exige uma grande dose de arrastar, largar e ligar "
"componentes. Além disso, modelos de sistemas podem se tornar grandes e complexos "
"sem qualquer tipo de hierarquia. Esta é mais uma limitação em "
"escalabilidade. Para resolver esse problema, nós examinamos como definir modelos de "
"subsistemas reutilizáveis que, em vez de conter equações para reutilização, "
"tenha conjuntos de componentes reutilizáveis e outros subsistemas. Desta "
"maneira, podemos arrastar, largar e conectar conjuntos comuns de componentes em "
"conjuntos reutilizáveis. Isso minimiza a quantidade de ações de arrastar, soltar e "
"conectar o que é preciso para construir modelos de sistemas complexos."

#: ../../source/components/architectures.rst:34
msgid ""
"Each step in this progression has shown how to reduce the amount of tedious,"
" time consuming and potentially error prone work we need to perform in order"
" to build system models.  This chapter represents the last step along this "
"progression.  Here, we will learn about architectures.  Architectures are "
"models where a collection of subsystems have been **pre-connected** and the "
"composition of the system is done by simply selecting specific "
"implementations (models) for each subsystem in our system.  In this way, not"
" only do we not need to supply equations, we don't even need to drag, drop "
"and connect components or subsystems.  Instead, we only need to choose the "
"specific model to use for each particular subsystem."
msgstr ""
"Cada passo nessa progressão mostra como reduzir a quantidade de trabalho "
"tedioso, demorado e potencialmente errado de trabalho que precisamos fazer para "
"construir modelos de sistemas. Este capítulo representa o último passo nesta "
"progressão. Neste ponto, vamos aprender sobre arquiteturas. Arquiteturas são "
"modelos onde um conjunto de subsistemas têm sido **pré-conectado**  e a "
"composição do sistema é feito simplesmente seleccionando implementações "
"específicas (modelos) para cada subsistema em nosso sistema. Desta maneira, não "
"somente evitamos fornecer novamente as equações, como nem sequer precisamos arrastar, soltar "
"e conectar componentes ou subsistemas. Em vez disso, só precisamos escolher o "
"modelo específico a ser usado para cada subsistema particular."

#: ../../source/components/architectures.rst:47
msgid "Examples"
msgstr ""
"Exemplos

#: ../../source/components/architectures.rst:57
msgid "Review"
msgstr ""
"Revisão"
